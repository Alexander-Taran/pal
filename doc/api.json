{
  "id": 40,
  "name": "Dom",
  "kind": 256,
  "kindString": "Interface",
  "flags": {
    "isExported": true
  },
  "comment": {
    "shortText": "Represents the core APIs of the DOM."
  },
  "children": [
    {
      "id": 41,
      "name": "Element",
      "kind": 1024,
      "kindString": "Property",
      "flags": {
        "isExported": true
      },
      "comment": {
        "shortText": "The global DOM Element type."
      },
      "type": {
        "type": "reference",
        "name": "Element"
      }
    },
    {
      "id": 42,
      "name": "SVGElement",
      "kind": 1024,
      "kindString": "Property",
      "flags": {
        "isExported": true
      },
      "comment": {
        "shortText": "The global DOM SVGElement type."
      },
      "type": {
        "type": "reference",
        "name": "SVGElement"
      }
    },
    {
      "id": 45,
      "name": "activeElement",
      "kind": 1024,
      "kindString": "Property",
      "flags": {
        "isExported": true
      },
      "comment": {
        "shortText": "The document's active/focused element."
      },
      "type": {
        "type": "reference",
        "name": "Element"
      }
    },
    {
      "id": 43,
      "name": "boundary",
      "kind": 1024,
      "kindString": "Property",
      "flags": {
        "isExported": true
      },
      "comment": {
        "shortText": "A key representing a DOM boundary."
      },
      "type": {
        "type": "instrinct",
        "name": "string"
      }
    },
    {
      "id": 44,
      "name": "title",
      "kind": 1024,
      "kindString": "Property",
      "flags": {
        "isExported": true
      },
      "comment": {
        "shortText": "The document title."
      },
      "type": {
        "type": "instrinct",
        "name": "string"
      }
    },
    {
      "id": 46,
      "name": "addEventListener",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 47,
          "name": "addEventListener",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Add an event listener to the document."
          },
          "parameters": [
            {
              "id": 48,
              "name": "eventName",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "A string representing the event type to listen for."
              },
              "type": {
                "type": "instrinct",
                "name": "string"
              }
            },
            {
              "id": 49,
              "name": "callback",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The function that receives a notification when an event of the specified type occurs."
              },
              "type": {
                "type": "reference",
                "name": "Function"
              }
            },
            {
              "id": 50,
              "name": "capture",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "If true, useCapture indicates that the user wishes to initiate capture.\n"
              },
              "type": {
                "type": "instrinct",
                "name": "boolean"
              }
            }
          ],
          "type": {
            "type": "instrinct",
            "name": "void"
          }
        }
      ]
    },
    {
      "id": 56,
      "name": "adoptNode",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 57,
          "name": "adoptNode",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Adopts a node from an external document.",
            "returns": "The adopted node able to be used in the document.\n"
          },
          "parameters": [
            {
              "id": 58,
              "name": "node",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The node to be adopted."
              },
              "type": {
                "type": "reference",
                "name": "Node"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Node"
          }
        }
      ]
    },
    {
      "id": 95,
      "name": "appendNode",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 96,
          "name": "appendNode",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Appends a node to the parent, if provided, or the document.body otherwise."
          },
          "parameters": [
            {
              "id": 97,
              "name": "newNode",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The node to append."
              },
              "type": {
                "type": "reference",
                "name": "Node"
              }
            },
            {
              "id": 98,
              "name": "parentNode",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "text": "The node to append to, otherwise the document.body.\n"
              },
              "type": {
                "type": "reference",
                "name": "Node"
              }
            }
          ],
          "type": {
            "type": "instrinct",
            "name": "void"
          }
        }
      ]
    },
    {
      "id": 65,
      "name": "createComment",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 66,
          "name": "createComment",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Creates a new Comment node.",
            "returns": "A Comment node.\n"
          },
          "parameters": [
            {
              "id": 67,
              "name": "text",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "A string to populate the new Comment node."
              },
              "type": {
                "type": "instrinct",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Comment"
          }
        }
      ]
    },
    {
      "id": 73,
      "name": "createCustomEvent",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 74,
          "name": "createCustomEvent",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Creates a new CustomEvent.",
            "returns": "A CustomEvent.\n"
          },
          "parameters": [
            {
              "id": 75,
              "name": "eventType",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "A string representing the event type."
              },
              "type": {
                "type": "instrinct",
                "name": "string"
              }
            },
            {
              "id": 76,
              "name": "options",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "An options object specifying bubbles:boolean, cancelable:boolean and/or detail:Object information."
              },
              "type": {
                "type": "reference",
                "name": "Object"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "CustomEvent"
          }
        }
      ]
    },
    {
      "id": 68,
      "name": "createDocumentFragment",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 69,
          "name": "createDocumentFragment",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Creates a new DocumentFragment.",
            "returns": "A DocumentFragment.\n"
          },
          "type": {
            "type": "reference",
            "name": "DocumentFragment"
          }
        }
      ]
    },
    {
      "id": 59,
      "name": "createElement",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 60,
          "name": "createElement",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Creates the specified HTML element or an HTMLUnknownElement if the given element name isn't a known one.",
            "returns": "The created element.\n"
          },
          "parameters": [
            {
              "id": 61,
              "name": "tagName",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "A string that specifies the type of element to be created."
              },
              "type": {
                "type": "instrinct",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element"
          }
        }
      ]
    },
    {
      "id": 70,
      "name": "createMutationObserver",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 71,
          "name": "createMutationObserver",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Creates a new MutationObserver.",
            "returns": "A MutationObservere.\n"
          },
          "parameters": [
            {
              "id": 72,
              "name": "callback",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "A callback that will recieve the change records with the mutations."
              },
              "type": {
                "type": "reference",
                "name": "Function"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "MutationObserver"
          }
        }
      ]
    },
    {
      "id": 92,
      "name": "createTemplateFromMarkup",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 93,
          "name": "createTemplateFromMarkup",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Creates an HTMLTemplateElement using the markup provided.",
            "returns": "The instance of HTMLTemplateElement that was created from the provided markup.\n"
          },
          "parameters": [
            {
              "id": 94,
              "name": "markup",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "A string containing the markup to turn into a template. Note: This string must contain the template element as well."
              },
              "type": {
                "type": "instrinct",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element"
          }
        }
      ]
    },
    {
      "id": 62,
      "name": "createTextNode",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 63,
          "name": "createTextNode",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Creates a new Text node.",
            "returns": "A Text node.\n"
          },
          "parameters": [
            {
              "id": 64,
              "name": "text",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "A string to populate the new Text node."
              },
              "type": {
                "type": "instrinct",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Text"
          }
        }
      ]
    },
    {
      "id": 77,
      "name": "dispatchEvent",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 78,
          "name": "dispatchEvent",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Dispatches an event on the document."
          },
          "parameters": [
            {
              "id": 79,
              "name": "evt",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The event to dispatch.\n"
              },
              "type": {
                "type": "reference",
                "name": "Event"
              }
            }
          ],
          "type": {
            "type": "instrinct",
            "name": "void"
          }
        }
      ]
    },
    {
      "id": 80,
      "name": "getComputedStyle",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 81,
          "name": "getComputedStyle",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Gives the values of all the CSS properties of an element after applying the active stylesheets and resolving any basic computation those values may contain.",
            "returns": "The computed styles.\n"
          },
          "parameters": [
            {
              "id": 82,
              "name": "element",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The Element for which to get the computed style."
              },
              "type": {
                "type": "reference",
                "name": "Element"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "CSSStyleDeclaration"
          }
        }
      ]
    },
    {
      "id": 83,
      "name": "getElementById",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 84,
          "name": "getElementById",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Locates an element in the document according to its id.",
            "returns": "The found element.\n"
          },
          "parameters": [
            {
              "id": 85,
              "name": "id",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The id to search the document for."
              },
              "type": {
                "type": "instrinct",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element"
          }
        }
      ]
    },
    {
      "id": 108,
      "name": "injectStyles",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 109,
          "name": "injectStyles",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Injects styles into the destination element, or the document.head if no destination is provided.",
            "returns": "The Style node that was created.\n"
          },
          "parameters": [
            {
              "id": 110,
              "name": "styles",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The css text to injext."
              },
              "type": {
                "type": "instrinct",
                "name": "string"
              }
            },
            {
              "id": 111,
              "name": "destination",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "text": "The destination element to inject the css text into. If not specified it will default to the document.head."
              },
              "type": {
                "type": "reference",
                "name": "Element"
              }
            },
            {
              "id": 112,
              "name": "prepend",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "text": "Indicates whether or not the styles should be prepended to the destination. By default they are appended."
              },
              "type": {
                "type": "instrinct",
                "name": "boolean"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Node"
          }
        }
      ]
    },
    {
      "id": 89,
      "name": "nextElementSibling",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 90,
          "name": "nextElementSibling",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Gets the element that is the next sibling of the provided element.",
            "returns": "The next sibling Element of the provided Element.\n"
          },
          "parameters": [
            {
              "id": 91,
              "name": "element",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The element whose next sibling is being located."
              },
              "type": {
                "type": "reference",
                "name": "Node"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element"
          }
        }
      ]
    },
    {
      "id": 86,
      "name": "querySelectorAll",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 87,
          "name": "querySelectorAll",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Performs a query selector on the document and returns all located matches.",
            "returns": "A list of all matched elements in the document.\n"
          },
          "parameters": [
            {
              "id": 88,
              "name": "query",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The query to use in searching the document."
              },
              "type": {
                "type": "instrinct",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "NodeList"
          }
        }
      ]
    },
    {
      "id": 51,
      "name": "removeEventListener",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 52,
          "name": "removeEventListener",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Remove an event listener from the document."
          },
          "parameters": [
            {
              "id": 53,
              "name": "eventName",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "A string representing the event type to listen for."
              },
              "type": {
                "type": "instrinct",
                "name": "string"
              }
            },
            {
              "id": 54,
              "name": "callback",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The function to remove from the event."
              },
              "type": {
                "type": "reference",
                "name": "Function"
              }
            },
            {
              "id": 55,
              "name": "capture",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "Specifies whether the listener to be removed was registered as a capturing listener or not.\n"
              },
              "type": {
                "type": "instrinct",
                "name": "boolean"
              }
            }
          ],
          "type": {
            "type": "instrinct",
            "name": "void"
          }
        }
      ]
    },
    {
      "id": 104,
      "name": "removeNode",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 105,
          "name": "removeNode",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Removes the specified node from the parent node."
          },
          "parameters": [
            {
              "id": 106,
              "name": "node",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The node to remove."
              },
              "type": {
                "type": "reference",
                "name": "Node"
              }
            },
            {
              "id": 107,
              "name": "parentNode",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "text": "The parent node from which the node will be removed.\n"
              },
              "type": {
                "type": "reference",
                "name": "Node"
              }
            }
          ],
          "type": {
            "type": "instrinct",
            "name": "void"
          }
        }
      ]
    },
    {
      "id": 99,
      "name": "replaceNode",
      "kind": 2048,
      "kindString": "Method",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 100,
          "name": "replaceNode",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Replaces a node in the parent with a new node."
          },
          "parameters": [
            {
              "id": 101,
              "name": "newNode",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The node to replace the old node with."
              },
              "type": {
                "type": "reference",
                "name": "Node"
              }
            },
            {
              "id": 102,
              "name": "node",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The node that is being replaced."
              },
              "type": {
                "type": "reference",
                "name": "Node"
              }
            },
            {
              "id": 103,
              "name": "parentNode",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "text": "The node that the current node is parented to.\n"
              },
              "type": {
                "type": "reference",
                "name": "Node"
              }
            }
          ],
          "type": {
            "type": "instrinct",
            "name": "void"
          }
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Properties",
      "kind": 1024,
      "children": [
        41,
        42,
        45,
        43,
        44
      ]
    },
    {
      "title": "Methods",
      "kind": 2048,
      "children": [
        46,
        56,
        95,
        65,
        73,
        68,
        59,
        70,
        92,
        62,
        77,
        80,
        83,
        108,
        89,
        86,
        51,
        104,
        99
      ]
    }
  ]
}